version: '3.4'

services:
  file-processor:
    build: .
    container_name: file-processor
    command: ["dockerize", "-wait", "tcp://landoop-kafka-compose:9092", "-timeout", "60s", "./main"]
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      - database
      - kafka-compose

  row-processor:
    build: .
    container_name: row-processor
    command: ["dockerize", "-wait", "tcp://landoop-kafka-compose:9092", "-timeout", "60s", "./worker"]
    networks:
      - app-network
    depends_on:
      - database
      - kafka-compose

  database:
    image: postgres:14
    container_name: file-processor-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fileprocessor
    ports:
      - "5432:5432"
    expose:
      - 5432
    networks:
      - app-network
      
  kafka-compose:
    image: landoop/fast-data-dev:latest
    container_name: landoop-kafka-compose
    environment:
      ADV_HOST: "landoop-kafka-compose"  # Define o host para acesso local
      RUNTESTS: "0"          # Desativa os testes iniciais
      SAMPLEDATA: "0"        # Não gera dados de exemplo
      KAFKA_CREATE_TOPICS: "rows-to-process:1:1"
    expose:
      - 9092
    networks:
      - app-network

  kafka-local:
    image: landoop/fast-data-dev:latest
    container_name: landoop-kafka-local
    environment:
      ADV_HOST: "localhost"  # Define o host para acesso local
      RUNTESTS: "0"          # Desativa os testes iniciais
      SAMPLEDATA: "0"        # Não gera dados de exemplo
      KAFKA_CREATE_TOPICS: "rows-to-process:1:1"
    ports:
      - "2181:2181"   # Zookeeper
      - "3030:3030"   # Landoop UI (Lenses)
      - "8081:8081"   # Schema Registry
      - "8082:8082"   # Kafka REST Proxy
      - "8083:8083"   # Kafka Connect REST API
      - "9092:9092"   # Kafka Broker
    expose:
      - 9092
    networks:
      - app-network



networks:
  app-network:
    driver: bridge